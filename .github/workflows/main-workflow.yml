name: Main Workflow

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]
    steps:
    - uses: actions/checkout@v2
    - name: Using Node v${{matrix.node-version}}
      uses: actions/setup-node@v2-beta
      with:
        node-version: ${{matrix.node-version}}
    - name: Install dependencies
      run: yarn --frozen-lockfile
    - name: Build the library (dev version)
      run: |
          yarn prebuild
          yarn build
    - name: Unit tests
      run: yarn test
    - name: End-to-end tests
      run: yarn e2e
    - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        flag-name: node-${{matrix.node-version}}
        parallel: true
  publish_coverage:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          parallel-finished: true
  compatibility_cjs_esm:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Using Node v14.x
      shell: bash -l {0}
      run: nvm install 14
    - name: Build production package
      run: |
        yarn
        yarn build:prod
    - name: Link package to serve it as-if it was a real package
      run: yarn link
    # Node >=13.2.0 enables support for ES modules by default
    # Our default version of node is above 13.2.0
    - name: Check compatibility against current version of Node
      run: |
        cd test/esm
        node --version
        sh run.sh
    # Node latest version supports ES modules by default
    - name: Check compatibility against latest version of Node
      shell: bash -l {0}
      run: |
        cd test/esm
        nvm install node
        node --version
        sh run.sh
    # Node 12.x and >=12.18 enables support for ES modules by default
    - name: Check compatibility against Node 12.18
      shell: bash -l {0}
      run: |
        cd test/esm
        nvm install 12.18
        node --version
        sh run.sh
    # Node <12.18 requires a flag to support ES modules but can understand them
    - name: Check compatibility against Node 12.17
      shell: bash -l {0}
      run: |
        cd test/esm
        nvm install 12.17
        node --version
        sh run.sh
    # Node 10 does not understand ES modules
    - name: Check compatibility against Node 10
      shell: bash -l {0}
      run: |
        cd test/esm
        nvm install 10
        node --version
        sh run.sh
    - name: Check package score using skypack
      run: npx @skypack/package-check
  build_prod_archive:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Using Node v${{matrix.node-version}}
      uses: actions/setup-node@v2-beta
      with:
        node-version: ${{matrix.node-version}}
    - name: Install dependencies
      run: yarn --frozen-lockfile
    - name: Build production package
      run: |
        yarn
        yarn build:prod
    - name: Create bundle
      run: |
        yarn pack
        mv fast-check-*.tgz fast-check.tgz
    - name: Upload math result for job 1
      uses: actions/upload-artifact@v2
      with:
        name: bundle
        path: fast-check.tgz
  validate_examples:
    needs: build_prod_archive
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download bundle result
        uses: actions/download-artifact@v2
        with:
          name: bundle
      - run: ls -alh
      - run: pwd
      - name: Extract and link bundle
        run: |
          tar -C bundle -zxvf fast-check.tgz
          cd bundle/package
          yarn install --production
          ls -l node_modules
          yarn link
  format_lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Using Node v${{matrix.node-version}}
      uses: actions/setup-node@v2-beta
      with:
        node-version: ${{matrix.node-version}}
    - name: Install dependencies
      run: yarn --frozen-lockfile
    - name: Check format
      run: yarn format:check
    - name: Check lint
      run: yarn lint:check
