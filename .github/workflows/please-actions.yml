name: Please Actions

on:
  issue_comment:
    types:
      - created

jobs:
  please_deploy:
    name: 'Please deploy'
    runs-on: ubuntu-latest
    if: github.event.issue.pull_request && github.event.comment.body == 'please deploy'
    steps:
      - name: Check comment
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const comment = context.payload.comment;
            if (comment.author_association !== "OWNER" && comment.author_association !== "COLLABORATOR") {
              console.error('"please deploy" can only be executed by an admin user');
              throw new Error('Operation canceled');
            }
            await github.rest.reactions.createForIssueComment({ ...context.repo, comment_id: comment.id, content: 'rocket' });
      - uses: actions/checkout@v3
      - name: Checkout Pull Request
        run: hub pr checkout "${{github.event.issue.number}}"
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: Using Node v16.x
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - name: Install fast-check dependencies
        run: yarn --frozen-lockfile
      - name: Build package
        run: yarn build:prod-ci
      - name: Generate documentation
        run: yarn docs-ci
      - name: Generate bundle
        run: |
          yarn pack
          mv fast-check-*.tgz docs/fast-check.tgz
      - name: Install deploy-netlify dependencies
        run: |
          cd ./.github/actions/deploy-netlify
          yarn --frozen-lockfile
      - name: Deploy on Netlify
        uses: ./.github/actions/deploy-netlify
        env:
          NETLIFY_SITE_ID: ${{secrets.NETLIFY_APP_ID}}
          NETLIFY_AUTH_TOKEN: ${{secrets.NETLIFY_AUTH_TOKEN}}

  please_merge:
    name: 'Please merge'
    runs-on: ubuntu-latest
    if: github.event.issue.pull_request && github.event.comment.body == 'please merge'
    steps:
      - name: Check comment
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const comment = context.payload.comment;
            if (comment.author_association !== "OWNER" && comment.author_association !== "COLLABORATOR") {
              console.error('"please merge" can only be executed by an admin user');
              throw new Error('Operation canceled');
            }
            await github.rest.reactions.createForIssueComment({ ...context.repo, comment_id: comment.id, content: '+1' });
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Checkout Pull Request
        run: hub pr checkout "${{github.event.issue.number}}"
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: Configure GIT
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
      - name: Merge BASE_REF into current PR
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const util = require('util');
            const execFile = util.promisify(require('child_process').execFile);
            const owner = context.payload.repository.owner.login;
            const repo = context.payload.repository.name;
            const pull_number = context.payload.issue.number;
            const prDetails = await github.rest.pulls.get({ owner, repo, pull_number });
            const baseRef = prDetails.data.base.ref;
            const { stdout } = await execFile("git", ["pull", "--no-rebase", "origin", baseRef]);
            const body = "Merge of `" + baseRef + "` resulted into:\n\n```txt\n" + stdout.trim() + "\n```\n\nWill try to push!";
            await github.rest.issues.createComment({ issue_number: pull_number, owner, repo, body });
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: Push
        run: git push

  please_debug:
    name: 'Please debug'
    runs-on: ubuntu-latest
    if: github.event.issue.pull_request && github.event.comment.body == 'please debug'
    steps:
      - name: Check comment
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const comment = context.payload.comment;
            await github.rest.reactions.createForIssueComment({ ...context.repo, comment_id: comment.id, content: '+1' });
      - name: Dump context accessible from github-script
        uses: actions/github-script@v6
        with:
          script: console.log(JSON.stringify(context, undefined, 2));
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{toJSON(github)}}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{toJSON(job)}}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{toJSON(steps)}}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{toJSON(runner)}}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${ toJSON(strategy)}}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{toJSON(matrix)}}
        run: echo "$MATRIX_CONTEXT"
