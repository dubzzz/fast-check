name: Format PR

on:
  workflow_dispatch:
    inputs:
      ref_type:
        description: 'Type of reference to format'
        required: true
        type: choice
        options:
          - branch
          - pull_request
      ref_value:
        description: 'Branch name or PR number'
        required: true
        type: string

permissions:
  contents: write
  pull-requests: read

jobs:
  format:
    name: 'Format code and commit changes'
    runs-on: ubuntu-latest
    steps:
      - name: Determine checkout reference
        id: ref
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ "${{ github.event.inputs.ref_type }}" = "pull_request" ]; then
            HEAD_BRANCH=$(gh pr view "${{ github.event.inputs.ref_value }}" --json headRefName | jq -r '.headRefName')
            echo "ref=$HEAD_BRANCH" >> $GITHUB_OUTPUT
          else
            echo "ref=${{ github.event.inputs.ref_value }}" >> $GITHUB_OUTPUT
          fi

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: ${{ steps.ref.outputs.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@41ff72655975bd51cab0327fa583b6e92b6d3061 # v4.2.0

      - name: Using Node v24.x
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        with:
          node-version: '24.x'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Check current branch info
        run: |
          echo "Current branch: $(git branch --show-current)"
          echo "Current commit: $(git rev-parse HEAD)"
          echo "Target ref: ${{ github.event.inputs.ref_value }}"

      - name: Check if formatting is needed
        id: format_check
        run: |
          if ! pnpm format:check; then
            echo "changes_needed=true" >> $GITHUB_OUTPUT
          else
            echo "changes_needed=false" >> $GITHUB_OUTPUT
          fi

      - name: Run format
        if: steps.format_check.outputs.changes_needed == 'true'
        run: pnpm format

      - name: Configure git
        if: steps.format_check.outputs.changes_needed == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - name: Commit formatting changes
        if: steps.format_check.outputs.changes_needed == 'true'
        run: |
          git add .
          if ! git diff --cached --quiet; then
            echo "Committing formatting changes..."
            git commit -m "ðŸ’„ Format code with prettier

            Applied by GitHub Action workflow: ${{ github.workflow }}
            Run ID: ${{ github.run_id }}
            Target branch: ${{ github.event.inputs.ref_value }}"
            
            echo "Pushing changes..."
            git push
          else
            echo "No changes to commit after formatting"
          fi

      - name: Output result
        run: |
          if [ "${{ steps.format_check.outputs.changes_needed }}" = "true" ]; then
            echo "âœ… Formatting changes have been committed and pushed"
          else
            echo "âœ… Code is already properly formatted, no changes needed"
          fi
