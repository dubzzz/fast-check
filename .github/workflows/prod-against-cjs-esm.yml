name: Production build against CJS/ESM

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Using Node v14.x
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - name: Build production package
      run: |
        yarn
        yarn build:prod
    - name: Link package to serve it as-if it was a real package
      run: yarn link
    - name: CJS/ESM support - Node >=13.2.0 enables support for ES modules by default
      run: |
        cd test/esm
        node --version
        sh run.sh
    - name: Using Node latest
      uses: actions/setup-node@v1
      with:
        node-version: '>=13.2.0'
        check-latest: true
    - name: CJS/ESM support - Node latest version supports ES modules by default
      run: |
        cd test/esm
        node --version
        sh run.sh
    - name: Using Node v12.18
      uses: actions/setup-node@v1
      with:
        node-version: '12.18'
    - name: CJS/ESM support - Node 12.x and >=12.18 enables support for ES modules by default
      run: |
        cd test/esm
        node --version
        sh run.sh
    - name: Using Node v12.17
      uses: actions/setup-node@v1
      with:
        node-version: '12.17'
    - name: CJS/ESM support - Node <12.18 requires a flag to support ES modules but can understand them
      run: |
        cd test/esm
        node --version
        sh run.sh
    - name: Using Node v10.x
      uses: actions/setup-node@v1
      with:
        node-version: '10.x'
    - name: CJS/ESM support - Node 10 does not understand ES modules
      run: |
        cd test/esm
        node --version
        sh run.sh
    - name: Check package score using skypack
      run: npx @skypack/package-check