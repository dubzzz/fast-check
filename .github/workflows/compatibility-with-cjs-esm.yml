name: Compatibility with CJS/ESM

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install nvm
      shell: bash -l {0}
      run: |
        cd ..
        echo $HOME
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash
        export NVM_DIR="$HOME/.nvm"
        echo "source $NVM_DIR/nvm.sh --install" >> "$HOME/.bash_profile"
        cd -
        source $HOME/.bash_profile
    - name: Using Node v14.x
      run: nvm install 14
    - name: Build production package
      run: |
        yarn
        yarn build:prod
    - name: Link package to serve it as-if it was a real package
      run: yarn link
    # Node >=13.2.0 enables support for ES modules by default
    # Our default version of node is above 13.2.0
    - name: Check compatibility against current version of Node
      run: |
        cd test/esm
        node --version
        sh run.sh
    # Node latest version supports ES modules by default
    - name: Check compatibility against latest version of Node
      run: |
        cd test/esm
        nvm install node
        node --version
        sh run.sh
    # Node 12.x and >=12.18 enables support for ES modules by default
    - name: Check compatibility against Node 12.18
      run: |
        cd test/esm
        nvm install 12.18
        node --version
        sh run.sh
    # Node <12.18 requires a flag to support ES modules but can understand them
    - name: Check compatibility against Node 12.17
      run: |
        cd test/esm
        nvm install 12.17
        node --version
        sh run.sh
    # Node 10 does not understand ES modules
    - name: Check compatibility against Node 10
      run: |
        cd test/esm
        nvm install 10
        node --version
        sh run.sh
    - name: Check package score using skypack
      run: npx @skypack/package-check